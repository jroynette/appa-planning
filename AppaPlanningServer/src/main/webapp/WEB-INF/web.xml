<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="APPA_PLANNING_ID" version="2.5">

	<display-name>Appa Planning Web Application</display-name>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring/app-context.xml</param-value>
	</context-param>

	<context-param>
		<param-name>spring.profiles.active</param-name>
        <param-value>dev</param-value>
	</context-param>

<!-- 	<session-config> -->
<!-- 		<session-timeout>1</session-timeout> -->
<!-- 	</session-config> -->

	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>
		<listener-class>flex.messaging.HttpFlexSession</listener-class>
	</listener>

	<!-- MessageBroker Servlet -->
	<servlet>
		<servlet-name>MessageBrokerServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:flex/message-broker.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- JPA Filter. BlazeDS just looooves that lazyloading... -->
<!-- 	<filter> -->
<!-- 		<filter-name>openEntityManagerInViewFilter</filter-name> -->
<!-- 		<filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class> -->
<!-- 	</filter> -->

<!-- 	<filter-mapping> -->
<!-- 		<filter-name>openEntityManagerInViewFilter</filter-name> -->
<!-- 		<url-pattern>/*</url-pattern> -->
<!-- 	</filter-mapping> -->

	<servlet-mapping>
		<servlet-name>MessageBrokerServlet</servlet-name>
		<url-pattern>/messagebroker/*</url-pattern>
	</servlet-mapping>

<!-- 	<filter> -->
<!-- 		<filter-name>springSecurityFilterChain</filter-name> -->
<!-- 		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class> -->
<!-- 	</filter> -->

<!-- 	<filter-mapping> -->
<!-- 		<filter-name>springSecurityFilterChain</filter-name> -->
<!-- 		<url-pattern>/messagebroker/*</url-pattern> -->
<!-- 	</filter-mapping> -->

	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>
</web-app>